#read in freesurfer QA aggregate file created by QA.sh
data<- read.csv("/data/jag/BBL/studies/pnc/processedData/structural/freesurfer53/stats/all.flags.n2140.csv")
#read in go1 data release demographics
demos<- read.csv("/data/jag/BBL/studies/pnc/subjectData/n1601_go1_datarel_073015.csv")
#change scanid to only the scanid (not datexscanid) so can match demographics
data$scanid<- as.character(data$scanid)
data$scanid<- substring(data$scanid,nchar(data$scanid)-3,nchar(data$scanid))
#get age at go1 scan and diagnosis (dxpmr4) from go1 data release for the 1601 and merge to freesurfer qa data
data$ageatgo1scan<- demos$ageAtGo1Scan[match(data$scanid,demos$scanid)]
data$goassessDxpmr4<- demos$goassessDxpmr4[match(data$scanid,demos$scanid)]
#get rid of data without diagnosis
data<- data[! is.na(data$goassessDxpmr4),]
#create a dataframe which gets count of subjects that were excluded by different auto QA flags
outlier_names<- grep("_outlier",names(data),value=T)
auto_qa_flags<- data.frame(outlier_names,"count"=NA)
for (i in outlier_names){
auto_qa_flags$count[auto_qa_flags$outlier_names==i]<- sum(data[,i]==1,na.rm=T)
}
#get number of subjects failed freesurfer
fail<- data.frame(outlier_names="failed_freesurfer",count=sum(is.na(data[,i])))
auto_qa_flags<- rbind(auto_qa_flags,fail)
library(ggplot2)
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=snr, color=goassessDxpmr4)) +
geom_point(shape=1) +
ggtitle("SNR")
hist(data$cnr,data$goassessDxpmr4)
data$goassessDxpmr4<- as.character(data$goassessDxpmr4)
hist(data$cnr,data$goassessDxpmr4)
ggplot(data, aes(x=cnr)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(data, aes(x=snr)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(data, aes(x=cnr)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(data, aes(x=cnr)) +
geom_histogram(binwidth=.05, colour="black", fill="white")
ggplot(data, aes(x=cnr)) +
geom_histogram(binwidth=.01, colour="black", fill="white")
ps<- data[ data$goassessDxpmr4=="4PS",]
ggplot(ps, aes(x=cnr)) +
geom_histogram(binwidth=.05, colour="black", fill="white")
ggplot(ps, aes(x=snr)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(data, aes(x=snr, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1)
corr(data$cnr,data$snr)
cor(data$cnr,data$snr)
cor(data$cnr,data$snr,na.rm=T)
cor.test(data$cnr,data$snr,na.rm=T)
ggplot(ps, aes(x=snr, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1)
ggplot(data, aes(x=snr, y=cnr, color=goassessDxpmr4, label=data$scanid)) +
geom_point(shape=1)
ggplot(data, aes(x=snr, y=cnr, color=goassessDxpmr4, label=scanid)) +
geom_point(shape=1)
ggplot(data, aes(x=snr, y=cnr, color=goassessDxpmr4, label=scanid)) +
geom_point(shape=1) +
geom_text(size=3)
data$bblid[data$scanid=="3827"]
data$bblid[data$scanid=="3703"]
data$bblid[data$scanid=="7869"]
data$bblid[data$scanid=="7889"]
data$bblid[data$scanid=="7869"]
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=mean(data$cnr)-2*sd(data$cnr)), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=mean(data$cnr)-2.5*sd(data$cnr), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=mean(data$cnr)-3*sd(data$cnr), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=mean(data$cnr)-3.5*sd(data$cnr), colour="red", linetype="dashed") +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=mean(data$cnr)-2*sd(data$cnr)), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=mean(data$cnr)-2.5*sd(data$cnr)), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=mean(data$cnr)-3*sd(data$cnr)), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=mean(data$cnr)-3.5*sd(data$cnr)), colour="red", linetype="dashed") +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$cnr)-2*sd(data$cnr)), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr)-2.5*sd(data$cnr)), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr)-3*sd(data$cnr)), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr)-3.5*sd(data$cnr)), colour="red", linetype="dashed") +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$cnr)-2*sd(data$cnr)), colour="blue", linetype="dashed")) +
geom_hline(aes(yintercept=(mean(data$cnr)-2.5*sd(data$cnr)), colour="yellow", linetype="dashed")) +
geom_hline(aes(yintercept=(mean(data$cnr)-3*sd(data$cnr)), colour="orange", linetype="dashed")) +
geom_hline(aes(yintercept=(mean(data$cnr)-3.5*sd(data$cnr)), colour="red", linetype="dashed")) +
ggtitle("CNR")
(mean(data$cnr)-2*sd(data$cnr))
mean(data$cnr,na.rm=T)-2*sd(data$cnr,na.rm=T)
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2*sd(data$cnr,na.rm=T)), colour="blue", linetype="dashed")) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2.5*sd(data$cnr,na.rm=T)), colour="yellow", linetype="dashed")) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3*sd(data$cnr,na.rm=T)), colour="orange", linetype="dashed")) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3.5*sd(data$cnr,na.rm=T)), colour="red", linetype="dashed")) +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2*sd(data$cnr,na.rm=T))), colour="blue", linetype="dashed")
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2*sd(data$cnr,na.rm=T))), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2.5*sd(data$cnr,na.rm=T))), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3*sd(data$cnr,na.rm=T))), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3.5*sd(data$cnr,na.rm=T))), colour="red", linetype="dashed") +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2*sd(data$cnr,na.rm=T))), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2.5*sd(data$cnr,na.rm=T))), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3*sd(data$cnr,na.rm=T))), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3.5*sd(data$cnr,na.rm=T))), colour="red", linetype="dashed") +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=snr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-2*sd(data$snr,na.rm=T))), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-2.5*sd(data$snr,na.rm=T))), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-3*sd(data$snr,na.rm=T))), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-3.5*sd(data$snr,na.rm=T))), colour="red", linetype="dashed") +
ggtitle("SNR")
pdf("/data/jag/BBL/studies/pnc/subjectData/freesurfer/n1601_fs53_age_by_dx_cnr_snr_scatterplots.pdf")
ggplot(data, aes(x=ageatgo1scan, y=cnr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2*sd(data$cnr,na.rm=T))), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-2.5*sd(data$cnr,na.rm=T))), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3*sd(data$cnr,na.rm=T))), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$cnr,na.rm=T)-3.5*sd(data$cnr,na.rm=T))), colour="red", linetype="dashed") +
ggtitle("CNR")
ggplot(data, aes(x=ageatgo1scan, y=snr, color=goassessDxpmr4)) +
geom_point(shape=1) +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-2*sd(data$snr,na.rm=T))), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-2.5*sd(data$snr,na.rm=T))), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-3*sd(data$snr,na.rm=T))), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=(mean(data$snr,na.rm=T)-3.5*sd(data$snr,na.rm=T))), colour="red", linetype="dashed") +
ggtitle("SNR")
dev.off()
#MQ November 11,2015
#This script takes the CNR and Euler number output from
#/data/jag/BBL/projects/pncReproc2015/pncReproc2015Scripts/freesurfer/cnr_euler_number_calculation.sh
#for GO1/GO2 Freesurfer version 5.3 reprocessing and does the following:
### 1) merges the files into an aggregate qa file and cleans data
### 2) compares the cnr measures to euler numbers as well as to other automatic qa measures
###    (from /data/jag/BBL/projects/pncReproc2015/pncReproc2015Scripts/freesurfer/QA.sh)
### 3) creates descriptive statistics plots and tables of each cnr and euler measure
### 4) examine how these measures relate to diagnosis (dxpmr4)
#load libraries
library(ggplot2)
############################################
###########DATA PREP########################
#read in data
cnr_data<- read.csv("/data/jag/BBL/projects/pncReproc2015/freesurfer/stats5_3/cnr/cnr_buckner.csv")
euler_data<- read.csv("/data/jag/BBL/projects/pncReproc2015/freesurfer/stats5_3/cnr/euler_number.csv")
#merge the files together by datexscanid
data<- cnr_data
data$left_euler<- euler_data$left_euler[match(data$scanid,euler_data$scanid)]
data$right_euler<- euler_data$right_euler[match(data$scanid,euler_data$scanid)]
#exclude the subject's that failed freesurfer processing (in this sample 4 subjects failed due to very poor scan
#quality and high motion)
exclude_list<- c("*x3805","*x4047","*x5387","*x4981")
data<- data[which(! data$scanid %in% exclude_list),]
############################################
###########MEASURE COMPARISON###############
####CNR AND EULER
#create data frame with correlation r value of cnr and euler numbers
cor_cnr_euler_table<- data.frame("measure"=c("gray/csf lh","gray/csf rh", "gray/white lh","gray/white rh","left_euler","right_euler"),"gray_csf_lh"=c(cor(data$graycsflh,data$graycsflh),cor(data$graycsflh,data$graycsfrh),cor(data$graycsflh,data$graywhitelh),cor(data$graycsflh,data$graywhiterh),cor(data$graycsflh,data$left_euler),cor(data$graycsflh,data$right_euler)),"gray_csf_rh"=c(cor(data$graycsfrh,data$graycsflh),cor(data$graycsfrh,data$graycsfrh),cor(data$graycsfrh,data$graywhitelh),cor(data$graycsfrh,data$graywhiterh),cor(data$graycsfrh,data$left_euler),cor(data$graycsfrh,data$right_euler)),"gray_white_lh"=c(cor(data$graywhitelh,data$graycsflh),cor(data$graywhitelh,data$graycsfrh),cor(data$graywhitelh,data$graywhitelh),cor(data$graywhitelh,data$graywhiterh),cor(data$graywhitelh,data$left_euler),cor(data$graywhitelh,data$right_euler)),"gray_white_rh"=c(cor(data$graywhiterh,data$graycsflh),cor(data$graywhiterh,data$graycsfrh),cor(data$graywhiterh,data$graywhitelh),cor(data$graywhiterh,data$graywhiterh),cor(data$graywhiterh,data$left_euler),cor(data$graywhiterh,data$right_euler)),"left_euler"=c(cor(data$left_euler,data$graycsflh),cor(data$left_euler,data$graycsfrh),cor(data$left_euler,data$graywhitelh),cor(data$left_euler,data$graywhiterh),cor(data$left_euler,data$left_euler),cor(data$left_euler,data$right_euler)),"right_euler"=c(cor(data$right_euler,data$graycsflh),cor(data$right_euler,data$graycsfrh),cor(data$right_euler,data$graywhitelh),cor(data$right_euler,data$graywhiterh),cor(data$right_euler,data$left_euler),cor(data$right_euler,data$right_euler)))
#write table out
write.csv(cor_cnr_euler_table,"/data/jag/BBL/studies/pnc/subjectData/freesurfer/go1_go2_fs53_cnr_euler_correlation_table.csv")
####EULER AND AUTO QA MEASURES
#read in auto qa csv
auto_qa<- read.csv("/data/jag/BBL/projects/pncReproc2015/freesurfer/stats5_3/all.flags.n2140.csv")
#subset auto qa to exclude those that failed freesurfer
auto_qa<- auto_qa[which(! auto_qa$scanid %in% exclude_list),]
#create data frame with correlation r value of cnr/euler numbers vs autoqa
cor_autoqa_table<- data.frame("measure"=c("gray/csf lh","gray/csf rh", "gray/white lh","gray/white rh","left_euler","right_euler"),"meanthickness_outlier"=c(cor(auto_qa$meanthickness_outlier,data$graycsflh),cor(auto_qa$meanthickness_outlier,data$graycsfrh),cor(auto_qa$meanthickness_outlier,data$graywhitelh),cor(auto_qa$meanthickness_outlier,data$graywhiterh),cor(auto_qa$meanthickness_outlier,data$left_euler),cor(auto_qa$meanthickness_outlier,data$right_euler)),"totalarea_outlier"=c(cor(auto_qa$totalarea_outlier,data$graycsflh),cor(auto_qa$totalarea_outlier,data$graycsfrh),cor(auto_qa$totalarea_outlier,data$graywhitelh),cor(auto_qa$totalarea_outlier,data$graywhiterh),cor(auto_qa$totalarea_outlier,data$left_euler),cor(auto_qa$totalarea_outlier,data$right_euler)),"cnr_outlier"=c(cor(auto_qa$cnr_outlier,data$graycsflh),cor(auto_qa$cnr_outlier,data$graycsfrh),cor(auto_qa$cnr_outlier,data$graywhitelh),cor(auto_qa$cnr_outlier,data$graywhiterh),cor(auto_qa$cnr_outlier,data$left_euler),cor(auto_qa$cnr_outlier,data$right_euler)),"snr_outlier"=c(cor(auto_qa$snr_outlier,data$graycsflh),cor(auto_qa$snr_outlier,data$graycsfrh),cor(auto_qa$snr_outlier,data$graywhitelh),cor(auto_qa$snr_outlier,data$graywhiterh),cor(auto_qa$snr_outlier,data$left_euler),cor(auto_qa$snr_outlier,data$right_euler)),"noutliers.thickness.rois_outlier"=c(cor(auto_qa$noutliers.thickness.rois_outlier,data$graycsflh),cor(auto_qa$noutliers.thickness.rois_outlier,data$graycsfrh),cor(auto_qa$noutliers.thickness.rois_outlier,data$graywhitelh),cor(auto_qa$noutliers.thickness.rois_outlier,data$graywhiterh),cor(auto_qa$noutliers.thickness.rois_outlier,data$left_euler),cor(auto_qa$noutliers.thickness.rois_outlier,data$right_euler)),"noutliers.lat.thickness.rois_outlier"=c(cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graycsflh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graycsfrh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graywhitelh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graywhiterh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$left_euler),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$right_euler)))
#write out table
write.csv(cor_autoqa_table,"/data/jag/BBL/studies/pnc/subjectData/freesurfer/go1_go2_fs53_cnr_euler_autoqa_correlation_table.csv")
############################################
###########DEMOGRAPHICS###############
#read in demographic data
demos<- read.csv("/data/jag/BBL/studies/pnc/subjectData/n1601_go1_datarel_073015.csv")
#change scanid so can match demographics to data
data2<- data
data2$scanid<- as.character(data2$scanid)
data2$scanid<- substring(data2$scanid,10,nchar(data2$scanid))
#merge dxpmr4 and age into cnr and euler data
data2$age<- demos$ageAtGo1Scan[match(data2$scanid,demos$scanid)]
data2$dxpmr4<- demos$goassessDxpmr4[match(data2$scanid,demos$scanid)]
#subset data to only go1 data (only have go1 dx)
data2<- data2[! is.na(data2$dxpmr4),]
############################################
###########DISTRIBUTION PLOTS###############
#write graphs to a pdf
pdf("/data/jag/BBL/studies/pnc/subjectData/freesurfer/go1_go2_fs53_cnr_euler_distribution_plots.pdf")
#loop through columns in data and plot histogram and scatterplot for each measure
for (i in 3:ncol(data)){
#get range and dynamically create binwidth for histogram (cnr and euler numbers have very different value ranges)
bw<- (max(data[,i])-min(data[,i]))/10
#histogram
g<- ggplot(data, aes(x=data[,i])) +
geom_histogram(binwidth=bw,colour="black", fill="white") +
ggtitle(colnames(data)[i]) +
xlab(colnames(data)[i])
print(g)
#scatterplot
h<- ggplot(data2, aes(x=age, y=data2[,i], color=dxpmr4)) +
geom_point(shape=1) +
ggtitle(paste("GO1",colnames(data2)[i],sep=" ")) +
ylab(colnames(data2)[i]) +
xlab("Age") +
geom_hline(aes(yintercept=mean(data2[,i])), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-2*sd(data2[,i])), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-2.5*sd(data2[,i])), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-3*sd(data2[,i])), colour="red", linetype="dashed")
print(h)
}
dev.off()
#################################################
###########BINARY EXCLUSION FLAGS################
#create a dataframe which will get the flags based on euler and cnr calculations
flags<- data
#get mean values for gray/csf cnr, gray/white cnr and euler numbers (average across hemispheres)
flags$mean_euler<-(flags$left_euler+flags$right_euler)/2
flags$mean_graycsf_cnr<- (flags$graycsflh+flags$graycsfrh)/2
flags$mean_graywhite_cnr<- (flags$graywhitelh+flags$graywhiterh)/2
#subset data frame to only IDs and averages
flags<- flags[,c(1,2,10:12)]
#create variables that get the standard deviation for cnr and euler number averages
graycsf_sd<- sd(flags$mean_graycsf_cnr)
graywhite_sd<- sd(flags$mean_graywhite_cnr)
euler_sd<- sd(flags$mean_euler)
#create a binary flag column (1=yes, 0=no) for average cnr and euler numbers (<2 SD =1, >2 SD=0)
flags$graycsf_flag<- NA
flags$graywhite_flag<- NA
flags$euler_flag<- NA
for (i in 1:nrow(flags)){
if (flags$mean_graycsf[i]<=(2*graycsf_sd)){
flags$graycsf_flag[i]<- 1
}
}
View(flags)
flags$mean_graycsf_cnr[ flags$graycsf_flag==1]
flags$mean_graycsf_cnr[flags$graycsf_flag==1]
flags$mean_graycsf_cnr<.2
#loop through columns in data and plot histogram and scatterplot for each measure
for (i in 3:ncol(data)){
#get range and dynamically create binwidth for histogram (cnr and euler numbers have very different value ranges)
bw<- (max(data[,i])-min(data[,i]))/10
#histogram
g<- ggplot(data, aes(x=data[,i])) +
geom_histogram(binwidth=bw,colour="black", fill="white") +
ggtitle(colnames(data)[i]) +
xlab(colnames(data)[i])
print(g)
#scatterplot
h<- ggplot(data2, aes(x=age, y=data2[,i], color=dxpmr4)) +
geom_point(shape=1) +
ggtitle(paste("GO1",colnames(data2)[i],sep=" ")) +
ylab(colnames(data2)[i]) +
xlab("Age") +
geom_hline(aes(yintercept=mean(data2[,i])), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-2*sd(data2[,i])), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-2.5*sd(data2[,i])), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-3*sd(data2[,i])), colour="red", linetype="dashed")
print(h)
}
data$graycsflh<.2
graycsf_cutoff<- mean(flags$mean_graycsf_cnr-(2*sd(flags$mean_graycsf_cnr))
)
mean(flags$mean_graycsf_cnr
)
#MQ November 11,2015
#This script takes the CNR and Euler number output from
#/data/jag/BBL/projects/pncReproc2015/pncReproc2015Scripts/freesurfer/cnr_euler_number_calculation.sh
#for GO1/GO2 Freesurfer version 5.3 reprocessing and does the following:
### 1) merges the files into an aggregate qa file and cleans data
### 2) compares the cnr measures to euler numbers as well as to other automatic qa measures
###    (from /data/jag/BBL/projects/pncReproc2015/pncReproc2015Scripts/freesurfer/QA.sh)
### 3) creates descriptive statistics plots and tables of each cnr and euler measure
### 4) examine how these measures relate to diagnosis (dxpmr4)
#load libraries
library(ggplot2)
############################################
###########DATA PREP########################
#read in data
cnr_data<- read.csv("/data/jag/BBL/projects/pncReproc2015/freesurfer/stats5_3/cnr/cnr_buckner.csv")
euler_data<- read.csv("/data/jag/BBL/projects/pncReproc2015/freesurfer/stats5_3/cnr/euler_number.csv")
#merge the files together by datexscanid
data<- cnr_data
data$left_euler<- euler_data$left_euler[match(data$scanid,euler_data$scanid)]
data$right_euler<- euler_data$right_euler[match(data$scanid,euler_data$scanid)]
#exclude the subject's that failed freesurfer processing (in this sample 4 subjects failed due to very poor scan
#quality and high motion)
exclude_list<- c("*x3805","*x4047","*x5387","*x4981")
data<- data[which(! data$scanid %in% exclude_list),]
############################################
###########MEASURE COMPARISON###############
####CNR AND EULER
#create data frame with correlation r value of cnr and euler numbers
cor_cnr_euler_table<- data.frame("measure"=c("gray/csf lh","gray/csf rh", "gray/white lh","gray/white rh","left_euler","right_euler"),"gray_csf_lh"=c(cor(data$graycsflh,data$graycsflh),cor(data$graycsflh,data$graycsfrh),cor(data$graycsflh,data$graywhitelh),cor(data$graycsflh,data$graywhiterh),cor(data$graycsflh,data$left_euler),cor(data$graycsflh,data$right_euler)),"gray_csf_rh"=c(cor(data$graycsfrh,data$graycsflh),cor(data$graycsfrh,data$graycsfrh),cor(data$graycsfrh,data$graywhitelh),cor(data$graycsfrh,data$graywhiterh),cor(data$graycsfrh,data$left_euler),cor(data$graycsfrh,data$right_euler)),"gray_white_lh"=c(cor(data$graywhitelh,data$graycsflh),cor(data$graywhitelh,data$graycsfrh),cor(data$graywhitelh,data$graywhitelh),cor(data$graywhitelh,data$graywhiterh),cor(data$graywhitelh,data$left_euler),cor(data$graywhitelh,data$right_euler)),"gray_white_rh"=c(cor(data$graywhiterh,data$graycsflh),cor(data$graywhiterh,data$graycsfrh),cor(data$graywhiterh,data$graywhitelh),cor(data$graywhiterh,data$graywhiterh),cor(data$graywhiterh,data$left_euler),cor(data$graywhiterh,data$right_euler)),"left_euler"=c(cor(data$left_euler,data$graycsflh),cor(data$left_euler,data$graycsfrh),cor(data$left_euler,data$graywhitelh),cor(data$left_euler,data$graywhiterh),cor(data$left_euler,data$left_euler),cor(data$left_euler,data$right_euler)),"right_euler"=c(cor(data$right_euler,data$graycsflh),cor(data$right_euler,data$graycsfrh),cor(data$right_euler,data$graywhitelh),cor(data$right_euler,data$graywhiterh),cor(data$right_euler,data$left_euler),cor(data$right_euler,data$right_euler)))
#write table out
write.csv(cor_cnr_euler_table,"/data/jag/BBL/studies/pnc/subjectData/freesurfer/go1_go2_fs53_cnr_euler_correlation_table.csv")
####EULER AND AUTO QA MEASURES
#read in auto qa csv
auto_qa<- read.csv("/data/jag/BBL/projects/pncReproc2015/freesurfer/stats5_3/all.flags.n2140.csv")
#subset auto qa to exclude those that failed freesurfer
auto_qa<- auto_qa[which(! auto_qa$scanid %in% exclude_list),]
#create data frame with correlation r value of cnr/euler numbers vs autoqa
cor_autoqa_table<- data.frame("measure"=c("gray/csf lh","gray/csf rh", "gray/white lh","gray/white rh","left_euler","right_euler"),"meanthickness_outlier"=c(cor(auto_qa$meanthickness_outlier,data$graycsflh),cor(auto_qa$meanthickness_outlier,data$graycsfrh),cor(auto_qa$meanthickness_outlier,data$graywhitelh),cor(auto_qa$meanthickness_outlier,data$graywhiterh),cor(auto_qa$meanthickness_outlier,data$left_euler),cor(auto_qa$meanthickness_outlier,data$right_euler)),"totalarea_outlier"=c(cor(auto_qa$totalarea_outlier,data$graycsflh),cor(auto_qa$totalarea_outlier,data$graycsfrh),cor(auto_qa$totalarea_outlier,data$graywhitelh),cor(auto_qa$totalarea_outlier,data$graywhiterh),cor(auto_qa$totalarea_outlier,data$left_euler),cor(auto_qa$totalarea_outlier,data$right_euler)),"cnr_outlier"=c(cor(auto_qa$cnr_outlier,data$graycsflh),cor(auto_qa$cnr_outlier,data$graycsfrh),cor(auto_qa$cnr_outlier,data$graywhitelh),cor(auto_qa$cnr_outlier,data$graywhiterh),cor(auto_qa$cnr_outlier,data$left_euler),cor(auto_qa$cnr_outlier,data$right_euler)),"snr_outlier"=c(cor(auto_qa$snr_outlier,data$graycsflh),cor(auto_qa$snr_outlier,data$graycsfrh),cor(auto_qa$snr_outlier,data$graywhitelh),cor(auto_qa$snr_outlier,data$graywhiterh),cor(auto_qa$snr_outlier,data$left_euler),cor(auto_qa$snr_outlier,data$right_euler)),"noutliers.thickness.rois_outlier"=c(cor(auto_qa$noutliers.thickness.rois_outlier,data$graycsflh),cor(auto_qa$noutliers.thickness.rois_outlier,data$graycsfrh),cor(auto_qa$noutliers.thickness.rois_outlier,data$graywhitelh),cor(auto_qa$noutliers.thickness.rois_outlier,data$graywhiterh),cor(auto_qa$noutliers.thickness.rois_outlier,data$left_euler),cor(auto_qa$noutliers.thickness.rois_outlier,data$right_euler)),"noutliers.lat.thickness.rois_outlier"=c(cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graycsflh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graycsfrh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graywhitelh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$graywhiterh),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$left_euler),cor(auto_qa$noutliers.lat.thickness.rois_outlier,data$right_euler)))
#write out table
write.csv(cor_autoqa_table,"/data/jag/BBL/studies/pnc/subjectData/freesurfer/go1_go2_fs53_cnr_euler_autoqa_correlation_table.csv")
############################################
###########DEMOGRAPHICS###############
#read in demographic data
demos<- read.csv("/data/jag/BBL/studies/pnc/subjectData/n1601_go1_datarel_073015.csv")
#change scanid so can match demographics to data
data2<- data
data2$scanid<- as.character(data2$scanid)
data2$scanid<- substring(data2$scanid,10,nchar(data2$scanid))
#merge dxpmr4 and age into cnr and euler data
data2$age<- demos$ageAtGo1Scan[match(data2$scanid,demos$scanid)]
data2$dxpmr4<- demos$goassessDxpmr4[match(data2$scanid,demos$scanid)]
#subset data to only go1 data (only have go1 dx)
data2<- data2[! is.na(data2$dxpmr4),]
############################################
###########DISTRIBUTION PLOTS###############
#write graphs to a pdf
pdf("/data/jag/BBL/studies/pnc/subjectData/freesurfer/go1_go2_fs53_cnr_euler_distribution_plots.pdf")
#loop through columns in data and plot histogram and scatterplot for each measure
for (i in 3:ncol(data)){
#get range and dynamically create binwidth for histogram (cnr and euler numbers have very different value ranges)
bw<- (max(data[,i])-min(data[,i]))/10
#histogram
g<- ggplot(data, aes(x=data[,i])) +
geom_histogram(binwidth=bw,colour="black", fill="white") +
ggtitle(colnames(data)[i]) +
xlab(colnames(data)[i])
print(g)
#scatterplot
h<- ggplot(data2, aes(x=age, y=data2[,i], color=dxpmr4)) +
geom_point(shape=1) +
ggtitle(paste("GO1",colnames(data2)[i],sep=" ")) +
ylab(colnames(data2)[i]) +
xlab("Age") +
geom_hline(aes(yintercept=mean(data2[,i])), colour="blue", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-2*sd(data2[,i])), colour="yellow", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-2.5*sd(data2[,i])), colour="orange", linetype="dashed") +
geom_hline(aes(yintercept=mean(data2[,i])-3*sd(data2[,i])), colour="red", linetype="dashed")
print(h)
}
dev.off()
#################################################
###########BINARY EXCLUSION FLAGS################
#create a dataframe which will get the flags based on euler and cnr calculations
flags<- data
#get mean values for gray/csf cnr, gray/white cnr and euler numbers (average across hemispheres)
flags$mean_euler<-(flags$left_euler+flags$right_euler)/2
flags$mean_graycsf_cnr<- (flags$graycsflh+flags$graycsfrh)/2
flags$mean_graywhite_cnr<- (flags$graywhitelh+flags$graywhiterh)/2
#subset data frame to only IDs and averages
flags<- flags[,c(1,2,10:12)]
#create variables that get the standard deviation for cnr and euler number averages
graycsf_cutoff<- mean(flags$mean_graycsf_cnr-(2*sd(flags$mean_graycsf_cnr)))
graywhite_cutoff<- mean(flags$mean_graywhite_cnr-(2*sd(flags$mean_graywhite_cnr)))
euler_cutoff<- mean(flags$mean_euler-(2*sd(flags$mean_euler)))
#create a binary flag column (1=yes, 0=no) for average cnr and euler numbers (<2 SD =1, >2 SD=0)
flags$graycsf_flag<- NA
flags$graywhite_flag<- NA
flags$euler_flag<- NA
for (i in 1:nrow(flags)){
if (flags$mean_graycsf_cnr[i]<=graycsf_cutoff){
flags$graycsf_flag[i]<- 1
} else if (flags$mean_graycsf_cnr[i]>graycsf_cutoff){
flags$graycsf_flag[i]<- 0
}
if (flags$mean_graywhite_cnr[i]<=graywhite_cutoff){
flags$graywhite_flag[i]<- 1
} else if (flags$mean_graywhite_cnr[i]>graywhite_cutoff){
flags$graywhite_flag[i]<- 0
}
if (flags$mean_euler[i]<=euler_cutoff){
flags$euler_flag[i]<- 1
} else if (flags$mean_euler[i]>euler_cutoff){
flags$euler_flag[i]<- 0
}
} # for (i in 1:nrow(flags)){
View(flags)
flags$noutliers.thickness.rois_outlier<- auto_qa$noutliers.thickness.rois_outlier[match(flags$scanid,auto_qa$scanid)]
#subset data frame to only IDs and flags
flags<- flags[,c(1,2,6:9)]
#create a total outliers column which gets the number of total outliers and a column which gets a binary flag 1=yes, 0=no
flags$total_outliers<- NA
flags$total_outliers<- sum(flags$graycsf_flag,flags$graywhite_flag,flags$euler_flag,flags$noutliers.thickness.rois_outlier)
flags$flagged<- flags$total_outliers
flags$flagged[flags$flagged>0]<- 1
View(flags)
?apply
apply(c(flags$graycsf_flag,flags$graywhite_flag,flags$euler_flag,flags$noutliers.thickness.rois_outlier),1,sum(x))
flags$total_outliers<- apply(c(flags$graycsf_flag,flags$graywhite_flag,flags$euler_flag,flags$noutliers.thickness.rois_outlier),1,sum(x))
flags$total_outliers<- apply(c(flags$graycsf_flag,flags$graywhite_flag,flags$euler_flag,flags$noutliers.thickness.rois_outlier),1,sum
)
x<- c(flags$graycsf_flag,flags$graywhite_flag,flags$euler_flag,flags$noutliers.thickness.rois_outlier)
flags$total_outliers<- apply(x,1,sum)
dim(x)
x<- cbind(flags$graycsf_flag,flags$graywhite_flag,flags$euler_flag,flags$noutliers.thickness.rois_outlier)
flags$total_outliers<- apply(x,1,sum)
View(flags)
flags$flagged<- flags$total_outliers
flags$flagged[flags$flagged>0]<- 1
View(flags)
write.csv(flags,"/data/jag/BBL/projects/pncReproc2015/freesurfer/stats5_3/cnr_euler_flags_n2136.csv")
data2$flagged<- flags$flagged[match(data2$bblid,flags$bblid)]
table(data2$flagged,data2$dxpmr4)
sum(data2$flagged)
sum(flags$flagged)
View(auto_qa)
y<- cbind(auto_qa$meanthickness_outlier,auto_qa$totalarea_outlier,auto_qa$SubCortGrayVol_outlier,auto_qa$CortexVol_outlier,auto_qa$CorticalWhiteMatterVol_outlier,auto_qa$cnr_outlier,auto_qa$snr_outlier,auto_qa$noutliers.thickness.rois_outlier,auto_qa$noutliers.lat.thickness.rois_outlier)
auto_qa$total_outliers<- apply(y,1,sum)
auto_qa$flagged<- auto_qa$total_outliers
auto_qa$flagged[auto_qa$flagged>0]<- 1
View(auto_qa)
sum(auto_qa$flagged)
table(data2$flagged,data2$age)
mean(data2$age[data2$flagged==1])
146/12
sd(data2$age[data2$flagged==1])
47/12
mean(data2$age[data2$flagged==0])
183/12
