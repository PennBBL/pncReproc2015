#!/usr/bin/env bash

###################################################################
#  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  ☭  #
###################################################################
REST=/data/joy/BBL/studies/pnc/processedData/restbold/restbold_201607151621/

###################################################################
# 1. Assemble QA outputs from the XCP Engine.
###################################################################
/data/joy/BBL/applications/xcpEngine/utils/combineOutput \
   -p ${REST} \
   -f "*quality.csv" \
   -o XCP_QAVARS.csv
mv -f ${REST}/XCP_QAVARS.csv .
xcpVars=$(cat XCP_QAVARS.csv|sed s@'subject\[0\]'@'bblid'@g|sed s@'subject\[1\]'@'datexscanid'@g)
for s in $xcpVars
   do
   s=$(echo $s|cut -d',' -f1),$(echo $s|cut -d'x' -f2-)
   echo $s >> REST_XCP.csv
done

###################################################################
# 2. R script assimilates the above with variables from previous
#    QA efforts.
#    First, preprocess the coverage data by stripping out the date.
###################################################################
rm -f REST_COVERAGE_PROCESSED.csv
echo "bblid,scanid,restVoxelwiseCoverageInclude" >> REST_COVERAGE_PROCESSED.csv
covVars=$(cat REST_COVERAGE.csv)
for s in $covVars
   do
   s=$(echo $s|cut -d',' -f1),$(echo $s|cut -d'x' -f2-|cut -d',' -f1,4)
   echo $s >> REST_COVERAGE_PROCESSED.csv
done
###################################################################
#    Then, merge them all.
###################################################################
./restQA_assembleVars.R

###################################################################
# 3. Assemble ROIwise outputs from the XCP Engine.
#    Each block below performs the assembly for one contrast for
#    one parcellation.
#
#    First, ReHo outputs for JLF.
###################################################################
rm -f measures.csv
echo "reho" >> measures.csv
rm -f REST_ROI_JLF*
/data/joy/BBL/applications/xcpEngine/utils/combineOutput \
   -p ${REST} \
   -f "*JLF_val_reho.1D" \
   -o REST_ROI1.txt
mv -f ${REST}/REST_ROI1.txt REST_ROI_JLF1.txt
./mergeROIvals.R \
   -r JLF \
   -o n1601_jlfRestReHo.csv
###################################################################
#    ReHo outputs for Glasser.
###################################################################
rm -f REST_ROI_GlasserPNC*
/data/joy/BBL/applications/xcpEngine/utils/combineOutput \
   -p ${REST} \
   -f "*GlasserPNC_val_reho.1D" \
   -o REST_ROI1.txt
mv -f ${REST}/REST_ROI1.txt REST_ROI_GlasserPNC1.txt
./mergeROIvals.R \
   -r GlasserPNC \
   -o n1601_glasserRestReHo.csv
###################################################################
#   ALFF outputs for JLF.
###################################################################
rm -f measures.csv
echo "alff" >> measures.csv
rm -f REST_ROI_JLF*
/data/joy/BBL/applications/xcpEngine/utils/combineOutput \
   -p ${REST} \
   -f "*JLF_val_alff.1D" \
   -o REST_ROI1.txt
mv -f ${REST}/REST_ROI1.txt REST_ROI_JLF1.txt
./mergeROIvals.R \
   -r JLF \
   -o n1601_jlfRestALFF.csv
###################################################################
#   ALFF outputs for Glasser.
###################################################################
rm -f REST_ROI_GlasserPNC*
/data/joy/BBL/applications/xcpEngine/utils/combineOutput \
   -p ${REST} \
   -f "*GlasserPNC_val_alff.1D" \
   -o REST_ROI1.txt
mv -f ${REST}/REST_ROI1.txt REST_ROI_GlasserPNC1.txt
./mergeROIvals.R \
   -r GlasserPNC \
   -o n1601_glasserRestALFF.csv
